#!/usr/bin/env node
const path = require("path");
const cwd = process.cwd();
const packPath = path.resolve(cwd, "package.json");
const packInfo = require(packPath);
const fs = require("fs");
const chalk = require("chalk");

// 修改入口文件
packInfo.main = "lib/index.js";

// 开发依赖
packInfo.devDependencies = {
    "@beisen/babel": "7.x.x",
    "@beisen/build": "1.0.23",
    "@beisen/italent-thunder": "^1.0.18",
    "@beisen/storybook": "1.x.x",
    "@beisen/storybook-react": "4.x.x",
    "@beisen/ts": "1.x.x",
    "@beisen/webpack": "4.x.x",
    "@talentui/tools": "^1.0.4",
    "@types/react": "^16.7.13",
    "@types/react-dom": "^16.0.11",
    commitizen: "^2.x.x",
    react: "15.x.x",
    "react-dom": "15.x.x"
};

// peerDependencies
packInfo.peerDependencies = { react: "15.x.x", "react-dom": "15.x.x" };

// script命令
packInfo.scripts = {
    start: "italent-thunder start --asset_path=http://localhost:3001/",
    build: "italent-thunder build prod --mode development",
    "build-prod": "italent-thunder build prod",
    lib: "stl build lib",
    examples: "sbl start --port 9001",
    prepublish: "npm run lib"
};
// 删除dll
delete packInfo.dllList;

// 删除dll-config.js
const dllConfig = path.resolve(cwd,'src/dll-config.js');
if(fs.existsSync(dllConfig)){
    fs.unlinkSync(dllConfig)
}

fs.writeFileSync(
    path.resolve(cwd, "a.json"),
    JSON.stringify(packInfo, null, 4)
);
console.log(
    chalk.blue(
        `构建工具升级完成，请${chalk.red(
            "npm install && npm run start"
        )}检查项目是否启动成功`
    )
);
